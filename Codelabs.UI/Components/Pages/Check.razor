@page "/check"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<AuthorizeView>
    <Authorized>
        <p>Привет, @(Convert.ToString(_user.Role))(@_role)!</p>
        <p>Login: @_user.Login</p>
        <p>Name: @_user.Name</p>
        <p>Surname: @_user.Surname</p>
        <p>Phone: @_user.Phone</p>
    </Authorized>
    <NotAuthorized>
        <p>Кто ты воин?</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>();

    private UserOutputModel _user;
    private string _role;

    protected override void OnInitialized()
    {
        GetClaimsPrincipalData();

        if (claims.Count() != 0)
        {
            var userManager = new UserManager();
            _user = userManager.GetUserByID(Convert.ToInt32(claims[0].Value));
            _role = claims[1].Value;
        }
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();
        }
    }
}
