@page "/authorsprofileforauthor"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Codelabs.Core
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Author</PageTitle>

<head>
    <link rel="stylesheet" href="css/buttons.css" />
    <link rel="stylesheet" href="css/items.css" />
    <link rel="stylesheet" href="css/texts.css" />
</head>

<AuthorizeView>
    <Authorized>
        <div class="centered-content">
            <div class="violet-div">
                <p class="medium-text">Имя: @Model.Name</p>
                <p class="medium-text">Фамилия: @Model.Surname</p>
                <p class="medium-text">Почта: @Model.Email</p>
                <Button Class="green-button medium-button centered-content" Disabled>РЕДАКТИРОВАТЬ  </Button>
                @* <Button class="edit-lesson-btn">Редактировать</Button> *@
            </div>
        </div>
        @if (Model != null)
        {
            <p class="big-text">Ваши уроки</p>
            <ShowcaseComponent ChunkSize="3" AuthorID="@AuthorID" />
        }
        else
        {
            <p class="medium-text">Пожалуйста, <a href="/login">войдите в систему как автор</a> для доступа к этой странице.</p>
        }

    </Authorized>
    <NotAuthorized>
        <p class="medium-text">Пожалуйста, <a href="/login">войдите в систему как автор</a> для доступа к этой странице.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int AuthorID { get; set; }

    [Parameter]
    public UserOutputModel Model { get; set; }

    protected override void OnInitialized()
    {
        var userManager = new UserManager();
        var user = HttpContextAccessor.HttpContext.User;
        if (user.Identity.IsAuthenticated)
        {
            AuthorID = int.Parse(user.FindFirst(ClaimTypes.Name)?.Value);
            Model = userManager.GetAuthorByID(AuthorID);
            // Console.WriteLine("author id is");
            // Console.WriteLine(AuthorID);
        }

        // var manager = new UserManager();
        // var model = manager.GetUserByLogin("GENERICauthor");
        // Console.WriteLine(model.Login);
        // Console.WriteLine(model.Password);
    }
}