@page "/create-lesson"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@rendermode InteractiveServer

<PageTitle>Создание урока</PageTitle>

<head>
    <link rel="stylesheet" href="css/buttons.css" />
    <link rel="stylesheet" href="css/items.css" />
</head>

<div class="create-lesson-box">
    @if (IsAuthorized())
    {
        <EditForm style="width: 100%;" Model="lessonModel" OnValidSubmit="GoNextStep" FormName="createLessonForm">
            <div class="step-box">
                @switch (_step)
                {
                    case 1:
                        <CreateLessonStep1 lessonModel="lessonModel" />
                        break;
                    case 2:
                        <CreateLessonStep2 lessonModel="lessonModel" />
                        break;
                    case 3:
                        <CreateLessonStep3 lessonModel="lessonModel" />
                        break;
                }
            </div>
            <div class="pagination-box">
                <button class="pagination-button" style="width: 50px;background-color: @GetColor(1);" @onclick="() => {ChangeStep(1);}">1</button>
                <button class="pagination-button" style="width: 50px;background-color: @GetColor(2);" @onclick="() => {ChangeStep(2);}">2</button>
                <button class="pagination-button" style="width: 50px;background-color: @GetColor(3);" @onclick="() => {ChangeStep(3);}">3</button>
                @if (_step != 3)
                {
                    <button type="submit" class="pagination-button" style="width: 120px;background-color: #01ff66;" @onclick="NextStep">Далее</button>
                }
                @if (_step == 3)
                {
                    <button class="pagination-button" style="width: 180px;background-color: #01ff66;" @onclick="FinishCreating">Завершить</button>
                }
            </div>
        </EditForm>
    }
    else 
    {
        <div style="display: inline-block;">
            <p class="not-authorized-link">Вы не авторизованы!</p>
            <a href="/login" class="scale-up-button">Авторизоваться</a>
        </div>
    }
</div>

@code {
    [SupplyParameterFromForm]
    public LessonInputModel lessonModel { get; set; } = new();

    private int _step = 1;

    private List<LessonInputModel> _models = new();

    [Inject] protected PreloadService PreloadService { get; set; } = default!;

    protected override void OnInitialized()
    {
        // var user = HttpContextAccessor.HttpContext.User;
        // if (user.Identity.IsAuthenticated)
        // {

        // }
    }

    public void GoNextStep()
    {
        Console.WriteLine(lessonModel.Name);
    }

    private void ChangeStep(int nextStep)
    {
        _step = nextStep;
    }

    private void NextStep()
    {
        if (_step == 3)
        {
            _step = 1;
        }
        else
        {
            _step++;
        }
    }

    private async Task FinishCreating()
    {
        
    }

    private string GetColor(int number)
    {
        if (number != _step)
        {
            return "#01ff66";
        }
        else
        {
            return "#fff701";
        }
    }

    private bool IsAuthorized()
    {
        var user = HttpContextAccessor.HttpContext.User;
        return user.Identity.IsAuthenticated;
    }
}