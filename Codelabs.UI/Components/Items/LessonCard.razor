@inject NavigationManager Nav;

<link rel="stylesheet" href="css/items.css" />
<link rel="stylesheet" href="css/buttons.css"/>
<link rel="stylesheet" href="css/texts.css" />

<div class="card lesson-card">
    <div class="lesson-card-header card-header">


        <div class="two-uneven-columns">
            <div class="column left-column">
                <Button @onclick="RedirectToBuy">
                    <p class="return-link">@(Model.Name)</p>
                </Button>
            </div>


        @if (showAsNew)
        {
            <div class="column right-column">
                <div class="medium-text new-item">
                    <div class="wave-container">
                        <h1 class="wave-text">
                            <span>N</span><span>E</span><span>W</span><span>!</span>
                        </h1>
                    </div>
                </div>
            </div>
        }
        </div>
    </div>

    <div>
        <p>@(Model.Description)</p>
    </div>
    
    <div class="lesson-card-footer ">
        @if (doEditLesson) {
            <Button class="lesson-card-btn edit-lesson-btn" @onclick="RedirectToEdit">Редактировать</Button>
        }

        else if (doOpenLesson)
        {
            <Button class="lesson-card-btn open-lesson-btn" @onclick="RedirectToOpen">Открыть</Button>
        }

        else if (doBuyLesson)
        {
            <Button class="lesson-card-btn buy-lesson-btn" @onclick="RedirectToBuy">@($"{Model.Cost}\u20BD")</Button>
        }

        <div>
            <Button class="lang-btn">
                @ParseLanguage()
            </Button>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public LessonForShowcaseOutputModel Model { get; set; }

    [Parameter]
    public bool doEditLesson { get; set; } = false;

    [Parameter]
    public bool doOpenLesson { get; set; } = false;

    [Parameter]
    public bool doBuyLesson { get; set; } = false;

    [Parameter]
    public bool showAsNew { get; set; } = false;

    public void RedirectToEdit()
    {
        Nav.NavigateTo($"/edit-lesson?id={Model.ID}", true);
    }

    public void RedirectToOpen()
    {
        Nav.NavigateTo($"/completing-lesson?id={Model.ID}", true);
    }

    public void RedirectToBuy()
    {
        Nav.NavigateTo($"/lessonprofile?lesson_id={Model.ID}", true);
    }

    public string ParseLanguage()
    {
        return Model.Language.Name switch
        {
            "TypeScript" => "TS",
            "Assembly" => "ASM",
            "Brainfuck" => "BF",
            _ => Model.Language.Name
        };
    }
}