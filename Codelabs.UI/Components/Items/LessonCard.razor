@inject NavigationManager Nav;

<link rel="stylesheet" href="css/items.css" />
<link rel="stylesheet" href="css/buttons.css"/>

<div class="card lesson-card">
    <div class="lesson-card-header card-header">
        <Button @onclick="RedirectToBuy">
            <p class="return-link">@(Model.Name)</p>
        </Button>
    </div>
    
    <div class="">
        <p>@(Model.Description)</p>
    </div>
    
    <div class="lesson-card-footer">
        @if (IsAuthor && Model.Author.ID == UserId)
        {
            <Button class="edit-lesson-btn" @onclick="RedirectToEdit">Редактировать</Button>
        }
        else
        {
            <div class="cost-div">@($"{Model.Cost}\u20BD")</div>
        }
        <div>
            <Button class="lang-btn">
                @ParseLanguage()
            </Button>
        </div>
    </div>
    
</div>

@code
{
    [Parameter]
    public LessonForShowcaseOutputModel Model { get; set; }
    [Parameter]
    public int UserId { get; set; }
    [Parameter]
    public bool IsAuthor { get; set; }

    public void RedirectToBuy()
    {
        Nav.NavigateTo($"/lessonprofile?lesson_id={Model.ID}", true);
    }

    public void RedirectToEdit()
    {
        Nav.NavigateTo($"/edit-lesson?id={Model.ID}", true);
    }

    public string ParseLanguage()
    {
        return Model.Language.Name switch
        {
            "TypeScript" => "TS",
            "Assembly" => "ASM",
            "Brainfuck" => "BF",
            // "C#" => "CSHARP",
            _ => Model.Language.Name
        };
    }
}
